// Generated by CoffeeScript 1.9.3
var SABAE, kanikama, newKanikama, showResult, test;

SABAE = true;

kanikama = new OldKanikama();

newKanikama = new Kanikama();

$(function() {
  $.when($.getJSON('https://app.haika.io/api/facility/7/7.geojson'), $.getJSON('https://app.haika.io/api/facility/7/8.geojson')).then(function() {
    var data, j, len;
    for (j = 0, len = arguments.length; j < len; j++) {
      data = arguments[j];
      if (data[1] === 'success') {
        kanikama.addGeoJSON(data[0]);
        newKanikama.addGeoJSON(data[0]);
      }
    }
  }).then(function() {
    showResult('テスト開始');
    return test();
  });
});

showResult = function(text) {
  return setTimeout(function() {
    return $('#result').text($('#result').text() + text + '\n');
  }, 10);
};

test = function(size) {
  if (size == null) {
    size = null;
  }
  return $.getJSON('./nd_data.json', function(testData) {
    var answer, beacons, i, j, k, len, len1, position, ref, result, row;
    showResult('データ読み込み完了');
    result = {
      ok: 0,
      ng: 0
    };
    for (i = j = 0, len = testData.length; j < len; i = ++j) {
      row = testData[i];
      if ((size != null) && i >= size) {
        break;
      }
      kanikama.pushCompass(row.compass[0].webkitCompassHeading);
      newKanikama.pushCompass(row.compass[0].webkitCompassHeading);
      ref = row.data;
      for (k = 0, len1 = ref.length; k < len1; k++) {
        beacons = ref[k];
        kanikama.pushBeacons(beacons);
        newKanikama.pushBeacons(beacons);
        answer = kanikama.positionLatLng;
        position = newKanikama.positionLatLng;
        if ((answer === position) || (((position != null) && (answer != null)) && (position[0] === answer[0] && position[1] === answer[1]))) {
          result.ok++;
        } else {
          result.ng++;
          console.log('エラー' + kanikama.positionAccuracy);
          console.log([kanikama.lane, newKanikama.lane]);
          console.log([kanikama.position, newKanikama.position]);
        }
      }
    }
    showResult(JSON.stringify(result, null, 2));
    if (result.ng > 0) {
      showResult('テスト完了! ngあり');
    } else {
      showResult('テスト完了!');
    }
  });
};

//# sourceMappingURL=position.js.map
